class Solution {
public:
    int lcs(string x, string y)
    {
        int n=x.length();
        int m=y.length();
        int i,j;
        int dp[n+1][m+1];
        for(i=0;i<=n;i++)
        {
            for(j=0;j<=m;j++)
            {
               if(i==0|| j==0){ dp[i][j]=0;} 
            }
         }
        for(i=1;i<=n;i++)
        {
            for(j=1;j<=m;j++)
            {
                if(x[i-1]==y[j-1])
                {
                    dp[i][j]=1+dp[i-1][j-1];
                }
                else
                {
                    dp[i][j]=max(dp[i-1][j],dp[i][j-1]);
                }
            }
         }
        return dp[n][m];
    }
    int longestPalindromeSubseq(string s) 
    { string r=s;
     reverse(s.begin(),s.end());
        int ans=lcs(s,r);
        return ans;
    }
};