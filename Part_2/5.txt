
long long int maximumNonAdjacentSum(vector<int> &arr)
{   int n=arr.size();
    vector<long long int> sum(n);
    sum[0]=arr[0];
    if(n>1)
    {
        sum[1]=max(arr[0],arr[1]);
        int j;
        for(j=2;j<n;j++)
        {
            sum[j]=max((arr[j]+sum[j-2]),sum[j-1]);
        }
    }
    return sum[n-1];
}
long long  int houseRobber(vector< int>& arr)
{ 
     int  n=arr.size();
     if(n==1){ return arr[0];}
    vector< int> arr1;
    vector< int> arr2;
    long long int j;
    for(j=0;j<n-1;j++)
    {
        arr1.push_back(arr[j]);
    }
    for(j=1;j<n;j++)
    {
        arr2.push_back(arr[j]);
    }
    
  long long  int ans,ans1,ans2,ans3;
    ans1= maximumNonAdjacentSum(arr1);
    ans2= maximumNonAdjacentSum(arr2); 
    ans=max(ans1,ans2);
    return ans;  
}