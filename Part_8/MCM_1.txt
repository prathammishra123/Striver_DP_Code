MEMOIZED-

int f(vector<int>& arr, int i, int j, vector<vector<int>>& dp){
    
    // base condition
    if(i == j)
        return 0;
        
    if(dp[i][j]!=-1)
        return dp[i][j];
    
    int mini = INT_MAX;
    
    // partioning loop
    for(int k = i; k<= j-1; k++){
        
        int ans = f(arr,i,k,dp) + f(arr, k+1,j,dp) + arr[i-1]*arr[k]*arr[j];
        
        mini = min(mini,ans);
        
    }
    
    return dp[i][j]=mini;
}





TABULAR-

#include <bits/stdc++.h> 
int matrixMultiplication(vector<int> &arr, int n)
{
   int i,j,k;
   vector<vector<int>> dp(n,vector<int>(n,-1));
   for(i=1;i<n;i++){dp[i][i]=0;}
   for(i=n-1;i>=1;i--)
   {
       for(j=i+1;j<n;j++)
       {   
           int mini=INT_MAX;
           for(k=i;k<j;k++)
           {
              int ans=dp[i][k]+dp[k+1][j]+arr[i-1]*arr[k]*arr[j];
              mini=min(mini,ans);
           }
           dp[i][j]=mini;
       }
   }
   return dp[1][n-1];
}