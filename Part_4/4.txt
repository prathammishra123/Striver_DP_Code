int findWays(vector<int> &num, int tar)
{  
   long long  int n=num.size();
   long long  int k=tar;
    long long int dp[n+1][k+1];
    int count=0;
   
    int i,j;
    for(i=0;i<=n;i++)
    {   
        if(num[i]==0){count++;}
        for(j=0;j<=k;j++)
        {
            if(i==0){dp[i][j]=0;}
            if(j==0){dp[i][j]=1*(long)(pow(2,count));}
        }
    }
     for(i=1;i<=n;i++)
    {
        for(j=1;j<=k;j++)
        {
           if((j-num[i-1])>=0)
           {
               dp[i][j]=dp[i-1][j]+dp[i-1][j-num[i-1]];
           }
            else
            {
                dp[i][j]=dp[i-1][j];
            }
        }
     }
    return (dp[n][k]); 
}